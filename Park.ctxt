#BlueJ class context
comment0.target=Park
comment0.text=This\ class\ implements\ the\ ZAPP\ interface\r\n\r\n\ @author\ Ayman\ A.\ Bhaldar\ \r\n\ @version\ 11/1/24\r\n
comment1.params=nme
comment1.target=Park(java.lang.String)
comment1.text=\ constructor\r\n
comment10.params=id\ code
comment10.target=boolean\ canMove(int,\ java.lang.String)
comment10.text=Returns\ true\ if\ a\ Card\ is\ allowed\ to\ move\ using\ the\ bridge,\ false\ otherwise\r\n\ A\ move\ can\ be\ made\ if\:\ \ \r\n\ the\ rating\ of\ the\ card\ \ >\=\ the\ rating\ of\ the\ destination\ area\r\n\ AND\ the\ destination\ area\ is\ not\ full\r\n\ AND\ the\ card\ has\ sufficient\ credits\r\n\ AND\ the\ card\ is\ currently\ in\ the\ source\ area\r\n\ AND\ the\ card\ id\ is\ for\ a\ card\ on\ the\ system\r\n\ AND\ the\ bridge\ code\ is\ the\ code\ for\ a\ bridge\ on\ the\ system\r\n\ @param\ id\ is\ the\ id\ of\ the\ card\ requesting\ the\ move\r\n\ @param\ code\ is\ the\ code\ of\ the\ bridge\ by\ which\ the\ card\ wants\ to\ move\r\n\ @return\ true\ if\ the\ card\ is\ allowed\ on\ the\ bridge\ journey,\ false\ otherwise\ \r\n
comment11.params=id\ code
comment11.target=java.lang.String\ move(int,\ java.lang.String)
comment11.text=Returns\ the\ result\ of\ a\ card\ requesting\ to\ move\ over\ a\ bridge.\r\n\ A\ move\ will\ be\ successful\ if\:\ \ \r\n\ the\ luxury\ rating\ of\ the\ card\ \ >\=\ the\ luxury\ rating\ of\ the\ destination\ area\r\n\ AND\ the\ destination\ area\ is\ not\ full\r\n\ AND\ the\ card\ has\ sufficient\ credits\r\n\ AND\ the\ card\ is\ currently\ in\ the\ source\ area\r\n\ AND\ the\ card\ id\ is\ for\ a\ card\ in\ the\ system\r\n\ AND\ the\ bridge\ code\ is\ the\ code\ for\ a\ bridge\ on\ the\ system\r\n\ If\ the\ bridge\ crossing\ can\ be\ made,\ the\ card\ information\ is\ removed\ from\ \r\n\ the\ source\ area,\ added\ to\ the\ destination\ area,\ card\ details\ updated\ and\ a\ suitable\ message\ returned.\r\n\ a\ suitable\ message\ returned.\r\n\ If\ bridge\ journey\ cannot\ be\ made,\ the\ state\ of\ the\ system\ remains\ unchanged\r\n\ and\ a\ message\ specifying\ the\ reason\ is\ returned.\r\n\ @param\ id\ is\ the\ id\ of\ the\ card\ requesting\ the\ move\r\n\ @param\ code\ is\ the\ code\ of\ the\ bridge\ by\ which\ the\ card\ wants\ to\ move\r\n\ @return\ a\ String\ giving\ the\ result\ of\ the\ request\ \r\n
comment12.params=id\ cr
comment12.target=void\ topUpCredits(int,\ int)
comment12.text=\ Allows\ a\ card\ to\ top\ up\ their\ credits.This\ method\ is\ not\ concerned\ with\ \r\n\ \ the\ cost\ of\ a\ credit\ as\ currency\ and\ prices\ may\ vary\ between\ resorts.\r\n\ \ @param\ id\ the\ id\ of\ the\ card\ toping\ up\ their\ credits\r\n\ \ @param\ cr\ the\ number\ of\ credits\ purchased\ to\ be\ added\ to\ cards\ information\r\n
comment13.params=id
comment13.target=void\ convertPoints(int)
comment13.text=\ Allows\ a\ card\ to\ convert\ points\ to\ credits\r\n\ \ @param\ id\ the\ id\ of\ the\ card\ toping\ up\ their\ credits\r\n
comment14.params=
comment14.target=void\ loadAreas()
comment14.text=creates\ all\ the\ areas\ \r\nand\ adds\ them\ to\ the\ collection\ of\ areas.
comment15.params=
comment15.target=void\ setupBridge()
comment15.text=Creates\ all\ bridges\ carding\ area\ objects\ to\ their\ constructors,\r\nthen\ adding\ them\ to\ the\ collection\ of\ bridges.
comment16.params=
comment16.target=void\ loadCards()
comment16.text=Creates\ all\ cardes\ and\ \r\nadd\ them\ to\ the\ collection\ of\ cards.
comment17.params=
comment17.target=void\ addCardsToLobby()
comment17.text=Method\ adds\ all\ of\ the\ cards\ to\ the\ \u201CLobby\u201Darea.\r\n
comment18.params=id
comment18.target=Card\ findCard(int)
comment18.text=\ Returns\ the\ card\ with\ the\ card\ id\ specified\ by\ the\ parameter\r\n\ @return\ the\ card\ with\ the\ specified\ id\r\n
comment19.params=refNo
comment19.target=Area\ findArea(int)
comment19.text=\ Returns\ the\ area\ with\ the\ name\ specified\ by\ the\ parameter\r\n\ @return\ the\ area\ with\ the\ specified\ name\r\n
comment2.params=
comment2.target=java.lang.String\ toString()
comment2.text=\r\n\ Returns\ all\ of\ the\ details\ of\ the\ park\:\ its\ name\ and\ its\ areas\ \r\n\ including\ lists\ of\ cards\ in\ each\ area.\r\n
comment20.params=code
comment20.target=Bridge\ findBridge(java.lang.String)
comment20.text=\ Returns\ the\ area\ with\ the\ name\ specified\ by\ the\ parameter\r\n\ @return\ the\ area\ with\ the\ specified\ name\r\n
comment3.params=
comment3.target=int\ noOfCards()
comment3.text=Returns\ the\ number\ of\ cards\ registered\ in\ the\ Park.\r\n@return\ number\ of\ cards\ \r\n
comment4.params=id
comment4.target=java.lang.String\ getCardDetails(int)
comment4.text=Returns\ a\ String\ with\ details\ of\ a\ card\r\n\ @param\ id\ -\ id\ number\ of\ the\ card\r\n\ @return\ the\ details\ of\ the\ card\ as\ a\ String,\ or\ "No\ such\ card"\r\n
comment5.params=id
comment5.target=java.lang.String\ getCardLocation(int)
comment5.text=Returns\ the\ name\ of\ the\ area\ which\ contains\ the\ specified\ card\ or\ null\r\n\ @param\ id\ -\ id\ number\ of\ the\ specified\ card\r\n\ @return\ the\ name\ of\ the\ Area\ which\ contains\ the\ card,\ or\ null\r\n
comment6.params=ww
comment6.target=int\ getAreaNumber(java.lang.String)
comment6.text=\ Given\ the\ name\ of\ a\ area,\ returns\ the\ area\ id\ number\r\n\ or\ -1\ if\ area\ does\ not\ exist\r\n\ @param\ ww\ is\ name\ of\ area\r\n\ @return\ id\ number\ of\ area\r\n
comment7.params=a
comment7.target=java.lang.String\ getAllCardsInOneArea(java.lang.String)
comment7.text=Returns\ a\ String\ representation\ of\ all\ the\ cards\ on\ specified\ area\r\n\ @param\ a\ is\ the\ name\ of\ the\ area\ \r\n\ @return\ a\ String\ representation\ of\ all\ cards\ on\ specified\ area\r\n
comment8.params=
comment8.target=java.lang.String\ getAllCardsInAllAreas()
comment8.text=Returns\ a\ String\ representation\ of\ all\ the\ cards\ in\ all\ areas\ including\ the\ name\ of\ each\ area\r\n\ @return\ a\ String\ representation\ of\ all\ cards\ on\ specified\ area\r\n
comment9.params=
comment9.target=java.lang.String\ getAllAreas()
comment9.text=Returns\ a\ String\ representation\ of\ all\ areas\ \r\n\ return\ string\ with\ details\ of\ all\ areas\ \r\n
numComments=21
